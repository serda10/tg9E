from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = '7738219240:AAFymFxObtawZ-_49U1hydZD_juPcMQhPDU'  # ‚Üê –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç BotFather

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥—Ä—É–∑—å—è—Ö
friends = {
    "—Å–∞–Ω–∂–∞—Ä": {
        "name": "–°–∞–Ω–∂–∞—Ä",
        "age": 15,
        "hobby": "–∏–≥—Ä–∞–µ—Ç –≤ –±—Ä–∞–≤–ª –∏ –∫–ª–µ—à",
        "fun_fact": "—Ñ–∞–Ω–∞—Ç –ì–∏—Ç–ª–µ—Ä–∞, 24 –∞–ø—Ä–µ–ª—è –±—ã–ª —É –Ω–µ–≥–æ –î–†",
        "school": "—É—á–∏—Ç—Å—è –Ω–∞ 4, –ª—é–±–∏—Ç –±–µ–∑–¥–µ–ª—å–Ω–∏—á–∞—Ç—å",
        "music": "–®–∞—Ä–æ–≤–∞—è –º–æ–ª–Ω–∏—è"
    },
    "—Å—É–ª—Ç–∞–Ω": {
        "name": "–°—É–ª—Ç–∞–Ω",
        "age": 15,
        "hobby": "–ª—é–±–∏—Ç –∏–≥—Ä–∞—Ç—å –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç, –ø–æ—á—Ç–∏ —á—Ç–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª —à–∞—Ä–∏—Ç –∏–≥—Ä—ã",
        "fun_fact": "–ó–∞—á–µ–º —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ—É –ø—Ä–æ –Ω–µ–≥–æ –≤—Å–µ –∂–µ –º—ã –∑–Ω–∞–µ–º —á—Ç–æ –æ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π –ï–í–†–ï–ô",
        "school": "—É—á–∏—Ç—Å—è –Ω–∞ 4, –æ–±–æ–∂–∞–µ—Ç –∞–Ω–≥–ª–∏—Å–∫–∏–π —è–∑—ã–∫",
        "music": "–ö–∞–∫ –≤–æ–∏—Ç–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞"
    },
    "—Å–∞–ª–∏–º": {
        "name": "–°–∞–ª–∏–º",
        "age": 16,
        "hobby": "–ª—é–±–∏—Ç –∏–≥—Ä–∞—Ç—å –≤ —Ñ—É—Ç–±–∏–∫",
        "fun_fact": "–•–∑ —á–µ –ø–∏—Å–∞—Ç—å, –∂–∏–≤–æ–π —â–∏—Ç –∫–æ—Ä–æ—á–µ",
        "school": "—É—á–∏—Ç—Å—è –Ω–∞ 4, –∫—Ä—É—Ç–æ–π –≤ –∞–ª–≥–µ–±—Ä–µ(–±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ–ª–µ—Ñ–æ–Ω—É) ",
        "music": "–°–∞–ª–∏–º –∂–µ—Ä—Ç–≤–∞, –ø–æ–¥ —Å–µ–±—è - –ø–æ–¥ —Å–µ–±—è"
    }
}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /run, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π [–∏ –Ω–µ –∑–∞–±—ã–≤–µ–º –ø—Ä–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è)) ] üòä")

# –ö–æ–º–∞–Ω–¥–∞ /run ‚Äî –≤—ã–±–æ—Ä –¥—Ä—É–≥–∞
async def run(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(friend["name"], callback_data=f"user_{key}")]
        for key, friend in friends.items()
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π –¢–ì –ë–û–¢! –í—ã–±–µ—Ä–∏ —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data.startswith("user_"):
        user_key = data.replace("user_", "")
        context.user_data["current_user"] = user_key

        section_keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info"),
                InlineKeyboardButton("üéØ –•–æ–±–±–∏", callback_data="hobby")
            ],
            [
                InlineKeyboardButton("ü§™ –§–∞–∫—Ç", callback_data="fact"),
                InlineKeyboardButton("üè´ –£—á—ë–±–∞", callback_data="school"),
                InlineKeyboardButton("ü§£ –ú–µ–º", callback_data="music")
            ]
        ])
        await query.edit_message_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {friends[user_key]['name']}. –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:",
            reply_markup=section_keyboard
        )

    elif data in ["info", "hobby", "fact", "school", "music"]:
        user_key = context.user_data.get("current_user")
        if not user_key:
            await query.edit_message_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Å–µ–±—è —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /run.")
            return

        user = friends[user_key]
        if data == "info":
            msg = f"üìÑ –ò–º—è: {user['name']}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {user['age']}"
        elif data == "hobby":
            msg = f"üéØ –•–æ–±–±–∏: {user['hobby']}"
        elif data == "fact":
            msg = f"ü§™ –§–∞–∫—Ç: {user['fun_fact']}"
        elif data == "school":
            msg = f"üè´ –£—á—ë–±–∞: {user['school']}"
        elif data == "music":
            msg = f"ü§£ –ú–µ–º: {user['music']}"

        await query.edit_message_text(msg)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("run", run))
app.add_handler(CallbackQueryHandler(button_handler))

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
app.run_polling()
